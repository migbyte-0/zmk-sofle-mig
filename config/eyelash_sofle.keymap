#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    macros {
        password: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_press>,
                <&kp M &kp I &kp G &kp N1 &kp N9 &kp N9 &kp N6>;

            label = "NEW_MACRO";
        };
    };

    combos {
        compatible = "zmk,combos";

        ee {
            bindings = <&kp ESCAPE>;
            key-positions = <34 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3          &kp N4             &kp N5    &kp RIGHT_CONTROL    &kp N6   &kp N7     &kp N8     &kp N9           &kp N0         &password
&kp TAB     &kp Q      &kp W         &kp F           &kp P              &kp B     &kp LG(DOWN_ARROW)   &kp J    &kp L      &kp U      &kp Y            &kp SEMICOLON  &kp BSLH
&kp CAPS    &kp A      &kp R         &kp S           &kp T              &kp G     &kp LG(LEFT_ARROW)   &kp M    &kp N      &kp E      &kp I            &kp O          &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C           &kp D              &kp V     &kp RG(RIGHT_ARROW)  &kp K    &kp H      &kp COMMA  &kp DOT          &kp FSLH       &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_SHIFT  &kp LA(BACKSPACE)  &mo 3     &kp ENTER            &kp RET  &kp SPACE  &mo 1      &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "kuru";
        };

        numbers {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8        &kp F9        &kp F10       &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP        &kp HOME      &kp MINUS     &kp EQUAL
&trans      &kp NUMBER_1     &kp NUMBER_2    &kp NUMBER_3     &kp NUMBER_4     &kp NUMBER_5       &mmv MOVE_LEFT   &kp NUMBER_6     &kp NUMBER_7     &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT    &kp F11       &kp F12       &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans        &trans        &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        workspaces {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7     &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans     &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &kp RG(S)  &kp RG(D)   &kp RG(F)  &kp RG(G)    &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans     &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans     &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        all {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans    &kp RIGHT_SHIFT      &trans     &trans  &trans     &trans      &trans  &trans
&trans  &trans  &trans     &mo 7      &trans     &trans    &kp LG(DOWN_ARROW)   &trans     &trans  &trans     &trans      &trans  &trans
&trans  &mo 8   &mo 9      &mo 5      &mo 2      &mo 9     &kp RG(LEFT_ARROW)   &kp TAB    &mo 6   &kp LC(S)  &kp ESCAPE  &mo 4   &trans
&trans  &trans  &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans    &kp RG(RIGHT_ARROW)  &trans     &trans  &trans     &trans      &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans    &trans               &kp LC(F)  &trans  &trans     &trans      &trans
            >;
        };

        shortcuts {
            bindings = <
&kp G   &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans     &trans  &trans  &trans
&trans  &trans  &kp W   &trans  &trans  &trans    &trans  &trans  &mo 4   &kp LG(W)  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans     &trans  &trans
            >;
        };

        vim {
            bindings = <
&kp S   &trans  &trans  &trans  &trans            &trans    &kp RS(RA(UP_ARROW))     &trans  &trans     &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans            &trans    &kp LS(LA(DOWN_ARROW))   &trans  &trans     &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &kp LC(NUMBER_6)  &trans    &kp LS(LA(LEFT_ARROW))   &trans  &kp LC(H)  &kp LC(J)  &kp LC(K)  &kp LC(L)  &trans
&trans  &trans  &trans  &trans  &trans            &trans    &kp RS(RA(RIGHT_ARROW))  &trans  &trans     &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans            &trans    &trans                   &trans  &trans     &trans     &trans     &trans
            >;
        };

        browser {
            bindings = <
&trans  &trans             &trans                 &trans             &trans                         &trans               &trans  &trans  &trans  &trans             &trans     &trans                         &trans
&trans  &trans             &trans                 &kp LG(W)          &kp LS(LA(LC(LG(SEMICOLON))))  &trans               &trans  &trans  &trans  &kp LS(LA(LG(G)))  &trans     &trans                         &trans
&trans  &kp LS(LC(LA(F)))  &kp LS(LA(LC(LG(Z))))  &kp LS(LA(LC(B)))  &kp LC(LA(LS(P)))              &kp LS(LA(LC(W)))    &trans  &trans  &trans  &kp LS(E)          &kp LS(R)  &kp LS(LG(LC(LA(SEMICOLON))))  &trans
&trans  &trans             &trans                 &trans             &trans                         &trans               &trans  &trans  &trans  &trans             &trans     &trans                         &trans
&trans  &trans             &trans                 &trans             &trans                         &trans               &trans  &trans  &trans  &trans             &trans     &trans
            >;
        };

        function {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans         &trans      &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans         &trans      &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp SPACE  &kp BACKSPACE  &kp RETURN  &kp RIGHT_SHIFT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans         &trans      &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans         &trans      &trans
            >;
        };

        arrows {
            bindings = <
&trans  &trans  &trans                  &trans              &trans               &trans                     &trans  &trans  &trans                  &trans                &trans          &trans           &trans
&trans  &trans  &trans                  &kp LA(LEFT_ARROW)  &kp RA(RIGHT_ARROW)  &trans                     &trans  &trans  &kp RS(RA(DOWN_ARROW))  &kp LS(LA(UP_ARROW))  &trans          &trans           &trans
&trans  &trans  &kp LS(LA(LEFT_ARROW))  &kp LG(LEFT_ARROW)  &kp RG(RIGHT_ARROW)  &kp RS(RA(RIGHT_ARROW))    &trans  &trans  &kp DOWN_ARROW          &kp UP_ARROW          &kp LEFT_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans  &trans                  &kp LA(LEFT_ARROW)  &kp RA(RIGHT_ARROW)  &trans                     &trans  &trans  &kp LG(DOWN_ARROW)      &kp RG(UP_ARROW)      &trans          &trans           &trans
&trans  &trans  &trans                  &trans              &trans               &trans                     &trans  &trans  &trans                  &trans                &trans          &trans
            >;
        };

        raycast {
            bindings = <
&trans  &trans              &trans             &trans  &trans         &trans               &trans  &trans                 &trans             &trans                  &trans                 &trans                 &trans
&trans  &trans              &trans             &trans  &kp LS(LC(Q))  &trans               &trans  &trans                 &trans             &kp LS(LA(LG(PERIOD)))  &trans                 &trans                 &trans
&trans  &kp LS(LG(PERIOD))  &kp LC(LA(LS(N)))  &trans  &kp LS(LC(R))  &kp LS(LA(LG(G)))    &trans  &kp LS(LG(LC(LA(Y))))  &kp LS(LC(COMMA))  &kp LS(LA(LC(LG(U))))   &kp LC(LA(LS(LG(I))))  &kp LC(LA(LS(X)))      &trans
&trans  &trans              &trans             &trans  &trans         &trans               &trans  &trans                 &trans             &trans                  &trans                 &kp LS(LC(LA(SLASH)))  &trans
&trans  &trans              &trans             &trans  &trans         &trans               &trans  &trans                 &trans             &trans                  &trans                 &trans
            >;
        };

        layer_10 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_11 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_12 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_13 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_14 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_15 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_16 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
